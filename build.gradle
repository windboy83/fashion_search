plugins {
    id 'java-library'
    id 'org.springframework.boot' version '3.2.3' apply(false)
    id 'io.spring.dependency-management' version '1.1.4' apply(false)
}

java {
    sourceCompatibility = '21'
}

allprojects {

    ext {
        set('springCloudVersion', "2023.0.0")
        set('queryDslVersion', '5.0.0')
    }

    repositories {
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    // 롬복 라이브러리를 어노테이션 프로세서로 등록하기 위한 어노테이션 프로세싱 기능을 활성화하는 것을 자동으로 구성
    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
        configureEach {
            exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
        }
    }

    dependencies {
        implementation(enforcedPlatform("org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"))

        implementation 'org.springframework.boot:spring-boot-starter'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        implementation 'org.springframework.boot:spring-boot-starter-log4j2'
        implementation 'org.springframework.boot:spring-boot-starter-web'

        implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'

        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        // Map Struct
        implementation 'org.mapstruct:mapstruct:1.5.3.Final'
        annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
        annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

        implementation 'org.apache.commons:commons-text:1.12.0'

        implementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'org.assertj:assertj-core:3.26.0'
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.2'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.2'
    }

    tasks.named('test', Test) {
        useJUnitPlatform()

        testLogging {
            events = ["passed", "failed", "skipped"]
        }

        String activeProfile = System.properties['spring.profiles.active']
        systemProperty "spring.profiles.active", activeProfile
    }
}

project(':fashion-search-domain-h2') {
    dependencies {
        api 'org.springframework.boot:spring-boot-starter-data-jpa'
        runtimeOnly("com.h2database:h2")
    }
}

project(':fashion-search-api') {

    dependencies {
        implementation project(':fashion-search-domain-h2')
    }

    bootJar {
        archiveBaseName = 'fashion-search-api'
        archiveFileName = 'fashion-search-api.jar'
        archiveVersion = '1.0.0'
    }
}